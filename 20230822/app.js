// ! 함수정의 방법 3가지.
// ! 함수 선언문
function 함수이름() {}

// ! 함수 표현식 => 익명

console.log(foo); //undefined
var foo = function () {};
foo();

// ! 함수 선언문과 함수 표현식의 차이
// ! 함수 선언문으로 정의를 하면 함수 호이스팅이 일어나지만,
// ! 함수 표현식으로 정의를 하면 변수에 할당하기때문에 변수 호이스팅이 발생한다.

// ! 화살표 함수
var foo2 = () => {};

// ! 화살표 함수에 매개변수가 한개일 때
var foo3 = (x) => {}; // 소괄호 생략 가능

// ! 화살표 함수에 매개변수가 없거나 , 2개 이상일 때
var foo4 = (x, y) => {};

// ! 함수의 코드가 한줄 일 때
// ? 중괄호가 생략됨과 동시에, return 키워드가 생략되어있다.
var foo5 = (x, y) => x + y;

// ! 객채 프로퍼티 축약 표현

var x = 1;
var y = 1;
var foo6 = {
  x,
  y,
};

// ! 함수는 한가지의 일만 해야한다.
// ! 매개변수 웬만하면 3개 이상을 넘기지 말자.

// ! retrun 값을 반환
// ! return 이후에 함수가 종료된다.
